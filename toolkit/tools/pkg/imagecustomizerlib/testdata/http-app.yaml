os:
  additionalFiles:
    # Create a basic HTTP app using Flask.
  - destination: /home/myapp/myapp.py
    content: |
      from flask import Flask

      app = Flask(__name__)

      @app.route("/")
      def hello_world():
         return "<p>Hello, World!</p>"

    # Create a systemd service so that the app runs on OS boot.
  - destination: /usr/local/lib/systemd/system/myapp.service
    content: |
      [Unit]
      Description=My App

      [Service]
      Type=exec
      ExecStart=/home/myapp/venv/bin/waitress-serve --listen 127.0.0.1:8080 myapp:app
      User=myapp
      WorkingDirectory=~

      [Install]
      WantedBy=multi-user.target

    # Use nginx to proxy port 80 to port 8080.
    # This allows the app to run without root permissions.
  - destination: /etc/nginx/nginx.conf
    content: |
      worker_processes 1;

      events {
        worker_connections 1024;
      }

      http {
        include mime.types;

        server {
          listen 80;
          location / {
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
          }
        }
      }

    # Update the iptables rules to allow port 80.
  - destination: /etc/systemd/scripts/ip4save
    content: |
      # init
      *filter
      :INPUT DROP [0:0]
      :FORWARD DROP [0:0]
      :OUTPUT DROP [0:0]
      # Allow local-only connections
      -A INPUT -i lo -j ACCEPT
      -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      #keep commented till upgrade issues are sorted
      #-A INPUT -j LOG --log-prefix "FIREWALL:INPUT "
      -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
      # Allow ICMP Time Exceeded - Used for TTL decrementing
      -A INPUT -p icmp --icmp-type 11 -j ACCEPT
      # Allot ICMP Destination Unreachable - Used for MTU negotiation
      -A INPUT -p icmp --icmp-type 3 -j ACCEPT
      # Open port 80.
      -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
      -A OUTPUT -j ACCEPT
      COMMIT

  packages:
    install:
    - nginx
    - python3
    - python3-pip

  services:
    enable:
    - nginx
    - myapp

  users:
  - name: myapp
    startupCommand: /usr/sbin/nologin

scripts:
  postCustomization:
    # Install the required Python packages for the app.
  - content: |
      set -eux
      python3 -m venv /home/myapp/venv
      /home/myapp/venv/bin/pip3 install Flask waitress
